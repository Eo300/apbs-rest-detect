name: Build All Platforms
on: 
  [push]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      shell: bash
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build Windows
      run: go build -v -o bin/detect.exe ./src/
      if: matrix.os == 'windows-latest'

    - name: Build Unix
      run: go build -v -o bin/detect ./src/
      if: matrix.os != 'windows-latest'

    - name: Check Windows Build
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        if [ "$(./bin/detect)" = "Hello I'm running on Windows" ]; then
            exit 0
        else
            exit 1
        fi
      
    - name: Check Linux Build
      if: matrix.os == 'ubuntu-latest'
      run: |
        if [ "$(./bin/detect)" = "Hello I'm running on Linux" ]; then
            exit 0
        else
            exit 1
        fi

    - name: Check macOS Build
      if: matrix.os == 'macOS-latest'
      run: |
        if [ "$(./bin/detect)" = "Hello I'm running on macOS" ]; then
            exit 0
        else
            exit 1
        fi
      
